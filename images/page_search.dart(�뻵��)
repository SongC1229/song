import 'package:flutter/material.dart';
import 'package:fluttertoast/fluttertoast.dart';
import 'util_db.dart';
import 'global_config.dart';
class SearchPage extends StatefulWidget {
  SearchPage({Key key}) : super(key: key);

  @override
  _SearchPageState createState() => new _SearchPageState();
}

class _SearchPageState extends State<SearchPage> {

  List<DropdownMenuItem> getListData(){
    List<DropdownMenuItem> items=new List();
    DropdownMenuItem dropdownMenuItem1=new DropdownMenuItem(
      child:new Text(" 唐 诗",style: TextStyle(fontFamily:GlobalConfig.fonts,)),
      value: 1,
    );
    items.add(dropdownMenuItem1);
    DropdownMenuItem dropdownMenuItem2=new DropdownMenuItem(
      child:new Text(" 宋 词",style: TextStyle(fontFamily:GlobalConfig.fonts,)),
      value: 2,
    );
    items.add(dropdownMenuItem2);
    DropdownMenuItem dropdownMenuItem3=new DropdownMenuItem(
      child:new Text(" 诗 经",style: TextStyle(fontFamily:GlobalConfig.fonts,)),
      value: 3,
    );
    items.add(dropdownMenuItem3);
    return items;
  }

  List<DropdownMenuItem> getListData2(){
    List<DropdownMenuItem> items=new List();
    DropdownMenuItem dropdownMenuItem1=new DropdownMenuItem(
      child:new Text(" 标 题",style: TextStyle(fontFamily:GlobalConfig.fonts,)),
      value: 1,
    );
    items.add(dropdownMenuItem1);
    DropdownMenuItem dropdownMenuItem2=new DropdownMenuItem(
      child:new Text(" 作者|章节",style: TextStyle(fontFamily:GlobalConfig.fonts,)),
      value: 2,
    );
    items.add(dropdownMenuItem2);
    DropdownMenuItem dropdownMenuItem3=new DropdownMenuItem(
      child:new Text(" 内 容",style: TextStyle(fontFamily:GlobalConfig.fonts,)),
      value: 3,
    );
    items.add(dropdownMenuItem3);
    return items;
  }

  Future<Null> _search() {
    return search(key,value1,value2).then((result,) {

      Fluttertoast.showToast(
          msg: "查询到"+result.length.toString()+"条",
          toastLength: Toast.LENGTH_SHORT,
          gravity: ToastGravity.CENTER,
          textcolor: '#000000'
      );

      setState(() {
        if(result!=null){
          data =result;
        }
      });
    });
  }


  var value1=1;
  var value2=1;
  var key="";
  var data;
  @override
  Widget build(BuildContext context) {
    return Stack(children: <Widget>[
      Container(
        margin: EdgeInsets.only(top: 100.0,left: 20.0,bottom: 10.0,right: 20.0),
        child:ListView(
          children: genList(),

        ),
      ),
      Column(
            children:<Widget>[
              Container(
                height: 40.0,
                child:
                TextField(
                  onChanged: (String str){//输入监听
                      key=str.replaceAll(" ", "%");
                  },
                  onSubmitted:(String str){//提交监听
                      key=str;
                  },
                  keyboardType: TextInputType.text,//设置输入框文本类型
                  textAlign: TextAlign.left,//设置内容显示位置是否居中等
                  decoration: new InputDecoration(
                      hintText: " 按条件查询|关键字以空格隔开",
                      border: InputBorder.none,
                    )
                ),
                decoration: BoxDecoration(
                  border: Border.all(width: 1.0, color: Colors.white),
                  borderRadius: BorderRadius.all(Radius.circular(5.0)),
                  color:Colors.white,
                ),
                margin: EdgeInsets.only(left:15.0,top: 5.0,bottom: 5.0,right: 15.0),
              ),
              Container(
                margin: EdgeInsets.only(left:15.0,top: 5.0,right: 15.0,bottom: 0.0),
                height: 40.0,
                child:
                Row(
                  mainAxisAlignment: MainAxisAlignment.center,
                  crossAxisAlignment: CrossAxisAlignment.center,
                  children: <Widget>[
                    Expanded(
                      child: Container(
                        decoration: BoxDecoration(
                          border: Border.all(width: 1.0, color: Colors.white),
                          borderRadius: BorderRadius.all(Radius.circular(5.0)),
                          color:Colors.white,
                        ),
                        child: DropdownButtonHideUnderline(
                               child: DropdownButton(
                                  items: getListData(),
                                  value: value1,//下拉菜单选择完之后显示给用户的值
                                  onChanged: (T){//下拉菜单item点击之后的回调
                                    setState(() {
                                      value1=T;
                                    });
                                  },
                                  style: TextStyle(//设置文本框里面文字的样式
                                      color: Colors.lightBlue
                                  ),
                                  iconSize: 20.0,//设置三角标icon的大小
                                ),
                        )
                      ),
                      flex: 2,
                    ),


                    Expanded(
                      child: Container(
                        margin: EdgeInsets.only(left: 5.0),
                        decoration: BoxDecoration(
                          border: Border.all(width: 1.0, color: Colors.white),
                          borderRadius: BorderRadius.all(Radius.circular(5.0)),
                          color:Colors.white,
                        ),
                        child:
                          DropdownButtonHideUnderline(
                            child:DropdownButton(
                              items: getListData2(),
                              value: value2,//下拉菜单选择完之后显示给用户的值
                              onChanged: (T){//下拉菜单item点击之后的回调
                                setState(() {
                                  value2=T;
                                });
                              },
                              style: TextStyle(//设置文本框里面文字的样式
                                  color: Colors.lightBlue
                              ),
                              iconSize: 20.0,//设置三角标icon的大小
                            ),
                          )
                      ),
                      flex: 2,
                    ),
                    Expanded(
                      child: Container(
                        margin: EdgeInsets.only(left: 5.0),
                        child:RaisedButton(
                            onPressed:_search,
                            color: Colors.blue,
                            child: Icon(Icons.search,size: 23.0)
                        ),
//                        color: Colors.blue,
                        decoration: BoxDecoration(
                          border: Border.all(width: 1.0, color: Colors.blue),
                          borderRadius: BorderRadius.all(Radius.circular(5.0)),
                          color:Colors.blue,
                        ),
                      ),
                      flex: 2,
                    ),
                  ],
                )
              ),


            ]
          )  ,
      ]
    );
  }


  List<Widget> genList() {
    if(data==null){
      return <Widget> [Container()];
    }
    if(data.length==0){
      return <Widget> [Container(
      )];
    }
    return data.map<Widget>((eachdata) {
      return _buildresult(eachdata);
    }).toList();
  }

  Widget _buildresult(Map eachdata) {
    return Container(
          margin: EdgeInsets.only(bottom: 10.0),
          decoration: BoxDecoration(
            border: Border.all(width: 1.0, color: Colors.purple),
            borderRadius: BorderRadius.all(Radius.circular(10.0)),
            image: DecorationImage(
                image:ExactAssetImage(GlobalConfig.backimg[0]),
                fit: BoxFit.cover
            ),
          ),
          child: Column(
              children: <Widget>[
                Padding(padding: EdgeInsets.only(left:5.0,bottom:3.0,top: 3.0),
                    child:Text(
                      eachdata["title"]+"|"+eachdata["author"],
                      style: TextStyle(
                          color: Colors.black,
                          fontSize: 18.0,
                          fontWeight: FontWeight.bold,
                          letterSpacing: 1.0,
                          fontFamily: GlobalConfig.fonts
                      ),
                    ),
                  ),
                Padding(padding: EdgeInsets.only(left:5.0,bottom:3.0,top: 3.0),
                  child:Text(
                    eachdata["content"],
                    style: TextStyle(
                        color: Colors.black,
                        fontSize: 16.0,
                        fontWeight: FontWeight.normal,
                        letterSpacing: 2.0,
                        fontFamily: GlobalConfig.fonts
                    ),
                  ),
                ),
              ],
          ),
      );
  }

}

